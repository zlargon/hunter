{"version":3,"sources":["storyflow.js","Store.js","Option.js","LoadingBar.js","App.js","serviceWorker.js","index.js"],"names":["StoryFlow","default","source","description","begin","start_time","end_time","next","part 1","options","let sam quite","let sam talk","part 2","put left cloth into sam's mouth","put right cloth into sam's mouth","part 3","help ashley","help jake","help corey","help sam","ending","toSecond","timeStr","t","split","map","parseFloat","e","storyflow","name","arguments","length","undefined","plot","Object","objectSpread","debugPlot","console","group","log","groupEnd","getCurrentAndNextPlot","currentSource","nextSource","StoreContext","createContext","initialState","stage","allowControls","showDecisionBox","selectedOption","reducer","state","action","_action","slicedToArray","type","payload","optionIndex","option","Error","concat","Store","_ref","children","_useReducer","useReducer","_useReducer2","dispatch","react_default","a","createElement","Provider","value","Option","props","_props$visible","visible","_props$selectable","selectable","classes","push","assign","className","join","LoadingBar","_ref$color","color","_React$useState","React","useState","_React$useState2","progress","setProgress","useEffect","passtime","id","setInterval","clearInterval","style","backgroundColor","width","App","_React$useContext","useContext","_React$useContext2","videoRef","createRef","videoContainerRef","isVideoPlay","setVideoPlay","_React$useState3","document","fullscreen","_React$useState4","isFullscreen","setFullscreen","_React$useState5","_React$useState6","videoTime","setVideoTime","addEventListener","foward","sec","current","currentTime","controlsClasses","decisionBoxClasses","ref","src","onTimeUpdate","vid","target","toFixed","Math","abs","startTime","onPlay","onPause","onEnded","time","Date","s","getSeconds","slice","m","getMinutes","getTimeString","onClick","paused","play","pause","exitFullscreen","requestFullscreen","src_LoadingBar","opt","i","src_Option","key","Boolean","window","location","hostname","match","ReactDOM","render","src_Store","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2ee3942.chunk.js","sourcesContent":["const StoryFlow = {\n  \"default\": {\n    \"source\": \"video.mp4\",\n    \"description\": \"\"\n  },\n\n  \"begin\": {\n    start_time: \"00:00:00.00\",\n    end_time: \"00:00:00.00\",\n    next: \"part 1\"\n  },\n\n  \"part 1\": {\n    start_time: \"00:00:00.00\",\n    end_time: \"00:04:18.44\",\n    options: [\n      \"let sam quite\",\n      \"let sam talk\"\n    ]\n  },\n\n  \"let sam quite\": {\n    start_time: \"00:04:45.42\",\n    end_time: \"00:06:11.41\",\n    next: \"part 2\"\n  },\n\n  \"let sam talk\": {\n    start_time: \"00:06:27.10\",\n    end_time: \"00:06:41.36\",\n    next: \"part 2\"\n  },\n\n  \"part 2\": {\n    start_time: \"00:06:41.36\",\n    end_time: \"00:09:20.54\",\n    options: [\n      \"put left cloth into sam's mouth\",\n      \"put right cloth into sam's mouth\"\n    ]\n  },\n\n  \"put left cloth into sam's mouth\": {\n    start_time: \"00:09:41.06\",\n    end_time: \"00:14:01.58\",\n    next: \"part 3\"\n  },\n\n  \"put right cloth into sam's mouth\": {\n    start_time: \"00:14:23.54\",\n    end_time: \"00:14:41.46\",\n    next: \"part 3\"\n  },\n\n  \"part 3\": {\n    start_time: \"00:14:41.46\",\n    end_time: \"00:15:40.41\",\n    options: [\n      \"help ashley\",\n      \"help jake\",\n      \"help corey\",\n      \"help sam\"\n    ]\n  },\n\n  \"help ashley\": {\n    start_time: \"00:16:09.53\",\n    end_time: \"00:21:56.17\",\n    next: \"ending\"\n  },\n\n  \"help jake\": {\n    start_time: \"00:22:20.00\",\n    end_time: \"00:31:54.47\",\n    next: \"ending\"\n  },\n\n  \"help corey\": {\n    start_time: \"00:32:04.31\",\n    end_time: \"00:36:32.07\",\n    next: \"ending\"\n  },\n\n  \"help sam\": {\n    start_time: \"00:36:35.59\",\n    end_time: \"00:41:02.05\",\n    next: \"ending\"\n  },\n\n  \"ending\": {\n    start_time: \"00:41:02.05\",\n    end_time: null\n  }\n};\n\nconst toSecond = (timeStr) => {\n  try {\n    const t = timeStr.split(':').map(parseFloat);\n    return t[0] * 24 + t[1] * 60 + t[2];\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default (name = 'begin') => {\n  const plot = StoryFlow[name];\n  return {\n    name,\n    ...plot,\n    start_time: toSecond(plot.start_time),\n    end_time: toSecond(plot.end_time)\n  }\n};\n\n","import React, { createContext, useReducer } from 'react';\nimport StoryFlow from './storyflow.js';\n\nconst debugPlot = (plot) => {\n  console.group(plot.name);\n  console.log('start_time:', plot.start_time);\n  console.log('end_time:', plot.end_time);\n  console.log('next:', plot.next);\n  console.log('options:', plot.options);\n  console.groupEnd();\n}\n\nconst getCurrentAndNextPlot = (plot) => {\n  debugPlot(plot);\n  return {\n    currentSource: plot,\n    nextSource: plot.next ? StoryFlow(plot.next) : {}\n  }\n}\n\n// StoreContext\nexport const StoreContext = createContext({});\n\nconst initialState = {\n  stage: 0,\n  allowControls: true,\n  showDecisionBox: false,\n  selectedOption: 0,\n  ...getCurrentAndNextPlot(StoryFlow())\n};\ndebugPlot(initialState.currentSource);\n\n// Reducer\nconst reducer = (state, action) => {\n  const [type, payload] = action;\n  console.log(type);\n\n  switch (type) {\n    case 'DECISION_PREPARE':\n      return {\n        ...state,\n        stage: 1,\n        allowControls: false\n      }\n\n    case 'DECISION_START':\n      return {\n        ...state,\n        stage: 2,\n        showDecisionBox: true\n      }\n\n    case 'DECISION_SELECTED':\n      return {\n        ...state,\n        stage: 3,\n        selectedOption: payload\n      }\n\n    case 'DECISION_PREPARE_END': {\n      const optionIndex = state.selectedOption;\n      const option = state.currentSource.options[optionIndex];\n\n      return {\n        ...state,\n        stage: 4,\n        nextSource: StoryFlow(option)\n      }\n    }\n\n    case 'NEXT_PLOT': {\n      return {\n        ...state,\n        stage: 0,\n        selectedOption: 0,\n        allowControls: true,\n        showDecisionBox: false,\n        ...getCurrentAndNextPlot(state.nextSource)\n      }\n    }\n\n    case 'VIDEO_END': {\n      return initialState;\n    }\n\n    default:\n      throw new Error(`Unknown Action Type: ${type}`);\n  }\n}\n\n// Store\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={[state, dispatch]}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n\nexport default Store;\n","import React from 'react';\n\nconst Option = (props) => {\n  const { visible = 1, selectable = 1 } = props;\n\n  const classes = ['option'];\n  if (visible) classes.push('visible');\n  if (selectable) classes.push('selectable');\n\n  return (\n    <div className={classes.join(' ')} {...props}>\n      <div>{ props.children }</div>\n      <div className=\"underline effect\"></div>\n    </div>\n  );\n}\n\nexport default Option;\n","import React from 'react';\n\n// progress = 0 ~ 1\nconst LoadingBar = ({ color = 'white' }) => {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const interval = 50;          // 50ms\n    const duration = 10 * 1000;   // 10sec\n    let passtime = 0;\n    const id = setInterval(() => {\n      passtime += interval;\n      setProgress(passtime / duration);\n    }, interval);\n\n    return () => { clearInterval(id) };\n  }, []);\n\n  const style = {\n    backgroundColor: color,\n    width: progress * 100 + '%'\n  };\n\n  return (\n    <div className=\"loading-bar\">\n      <div style={style}></div>\n    </div>\n  );\n}\n\nexport default LoadingBar;\n","import React from 'react';\nimport { StoreContext } from './Store';\nimport Option from './Option';\nimport LoadingBar from './LoadingBar';\n// import mov from './videos/video.mp4';\n\nconst App = () => {\n  // 1. state and dispatch\n  const [state, dispatch] = React.useContext(StoreContext);\n  const { stage, selectedOption, currentSource, nextSource } = state;\n\n  // 2. video state and refs\n  const videoRef = React.createRef();\n  const videoContainerRef = React.createRef();\n  const [isVideoPlay, setVideoPlay] = React.useState(false);\n  const [isFullscreen, setFullscreen] = React.useState(document.fullscreen);\n  const [videoTime, setVideoTime] = React.useState('00.00');\n  React.useEffect(() => {\n    document.addEventListener('fullscreenchange', (e) => {\n      setFullscreen(document.fullscreen);\n    });\n  }, []);\n\n  // 3. video functions\n  // 3-1. Play / Pause Toggle\n  const togglePlayPause = () => {\n    const vid = videoRef.current;\n    if (vid.paused) {\n      vid.play();\n    } else {\n      vid.pause();\n    }\n  }\n\n  // 3-2. forward / backward\n  const foward = (sec) => {\n    const vid = videoRef.current;\n    vid.currentTime += sec;\n  }\n\n  // 3-3. fullscreen toggle\n  const fullscreenToggle = () => {\n    if (document.fullscreen) {\n      // close fullscreen\n      document.exitFullscreen();\n    } else {\n      // open fullscreen\n      videoContainerRef.current.requestFullscreen();\n    }\n  }\n\n  // 4. Video Timeupdate Handler\n  const videoHandler = ({ target: vid }) => {\n    setVideoTime(vid.currentTime.toFixed(2));\n\n    if (currentSource.end_time === null) {\n      return;\n    }\n\n    // Has Next\n    if (currentSource.next) {\n      // not yet\n      if (vid.currentTime < currentSource.end_time) {\n        return;\n      }\n\n      // don't jump if the timeline is very closed\n      if (Math.abs(vid.currentTime - nextSource.start_time) > 2) {\n        vid.currentTime = nextSource.start_time;\n      }\n\n      return dispatch(['NEXT_PLOT']);\n    }\n\n    const startTime = currentSource.end_time - 15;\n\n    // 0 ~ 3s\n    if (stage === 0 && vid.currentTime >= startTime) {\n      return dispatch(['DECISION_PREPARE']);\n    }\n\n    // 3 ~ 13s\n    if (stage === 1 && vid.currentTime >= startTime + 3) {\n      return dispatch(['DECISION_START']);\n    }\n\n    // 3 ~ 8s (TODO: move to click event)\n    // if (stage === 2 && vid.currentTime >= startTime + 8) {\n    //   return dispatch(['DECISION_SELECTED']);\n    // }\n\n    // 13 ~ 15s\n    if ((stage === 2 || stage === 3) && vid.currentTime >= startTime + 13) {\n      return dispatch(['DECISION_PREPARE_END']);\n    }\n\n    // after 15s\n    if (stage === 4 && vid.currentTime >= startTime + 15) {\n      // don't jump if the timeline is very closed\n      if (Math.abs(vid.currentTime - nextSource.start_time) > 2) {\n        vid.currentTime = nextSource.start_time;\n      }\n\n      return dispatch(['NEXT_PLOT']);\n    }\n  }\n\n  // controls classes\n  const controlsClasses = ['controls'];\n  if (state.allowControls) controlsClasses.push('allow');\n  if (!isVideoPlay) controlsClasses.push('show');\n\n  // decision box classes\n  const decisionBoxClasses = ['decision-box'];\n  if (state.showDecisionBox) decisionBoxClasses.push('show');\n\n  const getTimeString = (time) => {\n    const t = new Date(time * 1000);\n    const s = ('00' + t.getSeconds()).slice(-2);\n    const m = ('00' + t.getMinutes()).slice(-2);\n    return `${m}:${s}`;\n  }\n\n  return (\n    <div className=\"container\" >\n      <div ref={videoContainerRef} className=\"app-video-section\">\n        {/* video */}\n        <video ref={videoRef}\n          src=\"https://github.com/zlargon/res/releases/download/hunter/all-1080p.mp4\"\n          // src={mov}\n          onTimeUpdate={videoHandler}\n          onPlay={() => setVideoPlay(true)}\n          onPause={() => setVideoPlay(false)}\n          onEnded={() => dispatch(['VIDEO_END'])}>\n        </video>\n\n        {/* Debug Bar */}\n        <div className=\"top-bar\">\n          <div>{videoTime}</div>\n          <div>{getTimeString(videoTime)}</div>\n          <div>{currentSource.name}</div>\n        </div>\n\n        {/* control bar */}\n        <div className=\"control-section\">\n          <div className={controlsClasses.join(' ')}>\n            <div onClick={togglePlayPause}>\n              { isVideoPlay ?\n                <i className=\"fas fa-pause\"></i> :\n                <i className=\"fas fa-play\"></i>\n              }\n            </div>\n            <div onClick={() => foward(-10)}>\n              <i className=\"fas fa-undo-alt\"></i>\n            </div>\n            <div onClick={() => foward(10)}>\n              <i className=\"fas fa-redo-alt\"></i>\n            </div>\n            <div onClick={fullscreenToggle}>\n              { isFullscreen ?\n                <i className=\"fas fa-compress\"></i> :\n                <i className=\"fas fa-expand\"></i>\n              }\n            </div>\n          </div>\n        </div>\n\n        {/* decision box */}\n        <div className={decisionBoxClasses.join(' ')}>\n          { (stage === 2 || stage === 3) && <LoadingBar color={ stage === 3 ? 'grey' : 'white' }/> }\n          {\n            currentSource.options && currentSource.options.map((opt, i) => {\n              const visible    = (stage === 2 || (stage >= 3 && i === selectedOption)) ? 1 : 0;\n              const selectable = (stage === 3 || stage === 4) ? 0 : 1;\n\n              return (\n                <Option key={i}\n                  visible={visible}\n                  selectable={selectable}\n                  onClick={() => dispatch(['DECISION_SELECTED', i])}>\n                  { opt }\n                </Option>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\nimport Store from './Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Store><App/></Store>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}