{"version":3,"sources":["Store.js","Option.js","LoadingBar.js","App.js","serviceWorker.js","index.js"],"names":["toSecond","timeStr","t","split","map","parseFloat","e","getStory","name","arguments","length","undefined","plot","Object","objectSpread","storyflow","start_time","end_time","select_time","next","getCurrentAndNextPlot","console","group","log","groupEnd","debugPlot","currentSource","nextSource","StoreContext","createContext","initialState","stage","allowControls","showDecisionBox","selectedOption","reducer","state","action","_action","slicedToArray","type","payload","concat","optionIndex","option","Error","Store","_ref","children","_useReducer","useReducer","_useReducer2","dispatch","react_default","a","createElement","Provider","value","Option","props","_props$visible","visible","_props$selectable","selectable","classes","push","assign","className","join","LoadingBar","_ref$duration","duration","_ref$color","color","_React$useState","React","useState","_React$useState2","progress","setProgress","useEffect","passtime","id","setInterval","clearInterval","style","backgroundColor","width","App","_React$useContext","useContext","_React$useContext2","videoRef","useRef","videoContainerRef","isVideoPlay","setVideoPlay","_React$useState3","document","fullscreen","_React$useState4","isFullscreen","setFullscreen","_React$useState5","_React$useState6","setVideoTime","handler","addEventListener","removeEventListener","togglePlayPause","vid","current","paused","play","pause","foward","useCallback","sec","prepare_time","currentTime","keyCode","controlsClasses","decisionBoxClasses","ref","src","video","onTimeUpdate","_ref2","target","toFixed","Math","abs","startTime","onPlay","onPause","onError","onEnded","process","onClick","exitFullscreen","requestFullscreen","src_LoadingBar","opt","i","src_Option","key","Boolean","window","location","hostname","match","ReactDOM","render","src_Store","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9806c8d.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport storyflow from './storyflow.json';\n\nconst toSecond = (timeStr) => {\n  try {\n    const t = timeStr.split(':').map(parseFloat);\n    return t[0] * 24 + t[1] * 60 + t[2];\n  } catch (e) {\n    return null;\n  }\n}\n\nconst getStory = (name = 'begin') => {\n  const plot = {\n    name,\n    ...storyflow['default'],\n    ...storyflow[name]\n  };\n\n  plot.start_time  = toSecond(plot.start_time);\n  plot.end_time    = toSecond(plot.end_time);\n  plot.select_time = plot.next.length > 1 ? plot.select_time : 0;\n  return plot;\n};\n\nconst debugPlot = (plot) => {\n  console.group('ðŸŽ¬', plot.name);\n  console.log('start_time:', plot.start_time);\n  console.log('end_time:', plot.end_time);\n  console.log('select_time:', plot.select_time);\n  console.log('prepare_time:', plot.end_time - plot.select_time);\n  console.log('next:', plot.next);\n  console.groupEnd();\n}\n\nconst getCurrentAndNextPlot = (plot) => {\n  debugPlot(plot);\n  return {\n    currentSource: plot,\n    nextSource: plot.next.length > 0 ? getStory(plot.next[0]) : null\n  }\n}\n\n// StoreContext\nexport const StoreContext = createContext({});\n\nconst initialState = {\n  stage: 0,\n  allowControls: true,\n  showDecisionBox: false,\n  selectedOption: 0,\n  ...getCurrentAndNextPlot(getStory())\n};\n\n// Reducer\nconst reducer = (state, action) => {\n  const [type, payload] = action;\n  console.log(`%c ðŸš€ ${type} `, 'background: black; color: yellow; font-weight : bold');\n\n  switch (type) {\n    case 'DECISION_PREPARE':\n      return {\n        ...state,\n        stage: 1,\n        allowControls: false\n      }\n\n    case 'DECISION_START':\n      return {\n        ...state,\n        stage: 2,\n        showDecisionBox: true\n      }\n\n    case 'DECISION_SELECTED':\n      return {\n        ...state,\n        stage: 3,\n        selectedOption: payload\n      }\n\n    case 'DECISION_PREPARE_END': {\n      const optionIndex = state.selectedOption;\n      const option = state.currentSource.next[optionIndex];\n\n      return {\n        ...state,\n        stage: 4,\n        nextSource: getStory(option)\n      }\n    }\n\n    case 'NEXT_PLOT': {\n      return {\n        ...state,\n        stage: 0,\n        selectedOption: 0,\n        allowControls: true,\n        showDecisionBox: false,\n        ...getCurrentAndNextPlot(state.nextSource)\n      }\n    }\n\n    case 'VIDEO_END': {\n      return initialState;\n    }\n\n    default:\n      throw new Error(`Unknown Action Type: ${type}`);\n  }\n}\n\n// Store\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={[state, dispatch]}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n\nexport default Store;\n","import React from 'react';\n\nconst Option = (props) => {\n  const { visible = 1, selectable = 1 } = props;\n\n  const classes = ['option'];\n  if (visible) classes.push('visible');\n  if (selectable) classes.push('selectable');\n\n  return (\n    <div className={classes.join(' ')} {...props}>\n      <div>{ props.children }</div>\n      <div className=\"underline effect\"></div>\n    </div>\n  );\n}\n\nexport default Option;\n","import React from 'react';\n\n// progress = 0 ~ 1\nconst LoadingBar = ({ duration = 10, color = 'white' }) => {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const interval = 20;\n    let passtime = 0;\n    const id = setInterval(() => {\n      passtime += interval;\n      setProgress(passtime / (duration * 1000));\n    }, interval);\n\n    return () => { clearInterval(id) };\n  }, [duration]);\n\n  const style = {\n    backgroundColor: color,\n    width: progress * 100 + '%'\n  };\n\n  return (\n    <div className=\"loading-bar\">\n      <div style={style}></div>\n    </div>\n  );\n}\n\nexport default LoadingBar;\n","import React from 'react';\nimport { StoreContext } from './Store';\nimport Option from './Option';\nimport LoadingBar from './LoadingBar';\n\nconst DEBUG_MODE = process.env.NODE_ENV !== 'production';\n\nconst App = () => {\n  // 1. state and dispatch\n  const [state, dispatch] = React.useContext(StoreContext);\n  const { stage, selectedOption, currentSource, nextSource } = state;\n\n  // 2. video state and refs\n  const videoRef = React.useRef(null);\n  const videoContainerRef = React.useRef(null);\n  const [isVideoPlay, setVideoPlay] = React.useState(false);\n  const [isFullscreen, setFullscreen] = React.useState(document.fullscreen);\n  const [videoTime, setVideoTime] = React.useState('0.00');\n  React.useEffect(() => {\n    const handler = () => {\n      setFullscreen(document.fullscreen);\n    }\n    document.addEventListener('fullscreenchange', handler);\n    return () => {\n      document.removeEventListener('fullscreenchange', handler);\n    }\n  }, []);\n\n  // 3. video functions\n  // 3-1. Play / Pause Toggle\n  const togglePlayPause = () => {\n    const vid = videoRef.current;\n    if (vid.paused) {\n      vid.play();\n    } else {\n      vid.pause();\n    }\n  }\n\n  // 3-2. forward / backward\n  const foward = React.useCallback((sec) => {\n    const vid = videoRef.current;\n    const { start_time, end_time, select_time } = currentSource;\n\n    // 1. forward (not later than perpare time)\n    const prepare_time = end_time - select_time;\n    if (sec > 0 && vid.currentTime + sec > prepare_time) {\n      vid.currentTime = prepare_time;\n      return;\n    }\n\n    // 2. backward (not early than start time)\n    if (sec < 0 && vid.currentTime + sec < start_time) {\n      vid.currentTime = start_time;\n      return;\n    }\n\n    // 3. normal\n    vid.currentTime += sec;\n  }, [currentSource]);\n\n  // 3-3. fullscreen toggle\n  const fullscreenToggle = () => {\n    if (document.fullscreen) {\n      // close fullscreen\n      document.exitFullscreen();\n    } else {\n      // open fullscreen\n      videoContainerRef.current.requestFullscreen();\n    }\n  }\n\n  // 4. keydown handler\n  React.useEffect(() => {\n    const handler = ({ keyCode }) => {\n      if (stage !== 0) {\n        return;\n      }\n\n      // the function only enable at stage 0\n      if (keyCode === 32) togglePlayPause();  // space\n      if (keyCode === 37) foward(-10);        // left arrow\n      if (keyCode === 39) foward(10);         // right arrow\n    }\n\n    document.addEventListener('keydown', handler);\n    return () => {\n      document.removeEventListener('keydown', handler);\n    };\n  }, [stage, foward]);\n\n  // 5. Video Timeupdate Handler\n  const videoHandler = ({ target: vid }) => {\n    setVideoTime(vid.currentTime.toFixed(2));\n\n    // 5-1. not next (ending plot)\n    if (currentSource.next.length === 0 || currentSource.end_time === null) {\n\n      // end of video\n      if (vid.currentTime >= currentSource.end_time) {\n        // force stop the video\n        vid.pause();\n        return dispatch(['VIDEO_END']);\n      }\n\n      return;\n    }\n\n    // 5-2. only one next\n    if (currentSource.next.length === 1) {\n      // not yet\n      if (vid.currentTime < currentSource.end_time) {\n        return;\n      }\n\n      // don't jump if the timeline is very closed\n      if (Math.abs(vid.currentTime - nextSource.start_time) > 2) {\n        vid.currentTime = nextSource.start_time;\n      }\n\n      return dispatch(['NEXT_PLOT']);\n    }\n\n    // 5-3. multiple next\n    const { end_time, select_time } = currentSource;\n    const startTime = end_time - select_time;\n\n    // PREPARE : START : PREPARE_END = 1 : 5 : 1\n\n    // after 0\n    if (stage === 0 && vid.currentTime >= startTime) {\n      // force play the video\n      vid.play();\n\n      return dispatch(['DECISION_PREPARE']);\n    }\n\n    // after 1\n    if (stage === 1 && vid.currentTime >= startTime + (select_time * 1 / 7)) {\n      return dispatch(['DECISION_START']);\n    }\n\n    // after 6\n    if ((stage === 2 || stage === 3) && vid.currentTime >= startTime + (select_time * 6 / 7)) {\n      return dispatch(['DECISION_PREPARE_END']);\n    }\n\n    // after 7\n    if (stage === 4 && vid.currentTime >= end_time) {\n      // don't jump if the timeline is very closed\n      if (Math.abs(vid.currentTime - nextSource.start_time) > 2) {\n        vid.currentTime = nextSource.start_time;\n      }\n\n      return dispatch(['NEXT_PLOT']);\n    }\n  }\n\n  // controls classes\n  const controlsClasses = ['controls'];\n  if (state.allowControls) controlsClasses.push('allow');\n  if (!isVideoPlay) controlsClasses.push('show');\n\n  // decision box classes\n  const decisionBoxClasses = ['decision-box'];\n  if (state.showDecisionBox) decisionBoxClasses.push('show');\n\n  const getTimeString = (time) => {\n    const t = new Date(time * 1000);\n    const s = ('00' + t.getSeconds()).slice(-2);\n    const m = ('00' + t.getMinutes()).slice(-2);\n    return `${m}:${s}`;\n  }\n\n  // TODO: debug\n  const onVideoError = (e) => {\n    console.log('onerror');\n    console.log(e);\n  }\n\n  return (\n    <div className=\"app\" >\n      <main ref={videoContainerRef}>\n        {/* 1. video */}\n        <video ref={videoRef} src={currentSource.video}\n          onTimeUpdate={videoHandler}\n          onPlay={() => setVideoPlay(true)}\n          onPause={() => setVideoPlay(false)}\n          onError={onVideoError}\n          onEnded={() => dispatch(['VIDEO_END'])}>\n        </video>\n\n        {/* 2. debug bar */}\n        { DEBUG_MODE &&\n          <div className=\"debug-bar\">\n            <div>{videoTime}</div>\n            <div>{getTimeString(videoTime)}</div>\n            <div>{currentSource.name}</div>\n          </div>\n        }\n\n        {/* 3. control section */}\n        <div className=\"control-section\">\n          <div className={controlsClasses.join(' ')}>\n            {/* 3-1-1. left */}\n            <div>\n              <div onClick={togglePlayPause}>\n                { isVideoPlay ?\n                  <i className=\"fas fa-pause\"></i> :\n                  <i className=\"fas fa-play\"></i>\n                }\n              </div>\n              <div onClick={() => foward(-10)}>\n                <i className=\"fas fa-undo-alt\"></i>\n              </div>\n              <div onClick={() => foward(10)}>\n                <i className=\"fas fa-redo-alt\"></i>\n              </div>\n            </div>\n\n            {/* 3-1-2. middle */}\n            <pre>{ DEBUG_MODE && currentSource.video.split('/').pop()}</pre>\n\n            {/* 3-1-3. right */}\n            <div>\n              <div onClick={fullscreenToggle}>\n                { isFullscreen ?\n                  <i className=\"fas fa-compress\"></i> :\n                  <i className=\"fas fa-expand\"></i>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 4. decision box */}\n        <div className={decisionBoxClasses.join(' ')}>\n          { (stage === 2 || stage === 3) &&\n            <LoadingBar\n              duration={currentSource.select_time * 5 / 7 }\n              color={ stage === 3 ? 'grey' : 'white' }\n            />\n          }\n          {\n            currentSource.next.length > 1 && currentSource.next.map((opt, i) => {\n              const visible    = (stage === 2 || (stage >= 3 && i === selectedOption)) ? 1 : 0;\n              const selectable = (stage === 3 || stage === 4) ? 0 : 1;\n\n              return (\n                <Option key={i}\n                  visible={visible}\n                  selectable={selectable}\n                  onClick={() => dispatch(['DECISION_SELECTED', i])}>\n                  { opt }\n                </Option>\n              );\n            })\n          }\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport Store from './Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Store><App/></Store>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}